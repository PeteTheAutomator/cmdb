#!/usr/bin/env python

import ConfigParser
import argparse
import json
from cmdb_libs.audit import YumHandler, FacterHandler, HostMetadata
import requests


config = ConfigParser.ConfigParser()
config.read('/etc/cmdb/server.conf')


def argparser():
    parser = argparse.ArgumentParser()
    parser.add_argument('-o', '--output', choices=['stdout', 'server'], default='stdout',
                        help='where to output the results')
    parsed_args = parser.parse_args()
    return vars(parsed_args)


def post_results(results, repo_url):
    headers = {'Content-Type': 'application/json'}
    r = requests.post(repo_url, headers=headers, data=json.dumps(results))
    if r.status_code != 201:
        raise Exception('Unexpected http response ({0}) from {1}'.format(r.status_code, repo_url))


def patch_results(results, repo_url, uuid, etag):
    headers = {'Content-Type': 'application/json', 'If-Match': etag}
    payload = {
        'instance_id': results['instance_id'],
        'rpm_packages': results['rpm_packages'],
        'facts': results['facts'],
    }
    r = requests.patch(repo_url + '/' + uuid + '/', headers=headers, data=json.dumps(payload))
    print 'patched: ({0})'.format(r.status_code)


def get_doc_id(repo_url, instance_id):
    headers = {'Content-Type': 'application/json'}
    request_url = repo_url + '/' + instance_id + '/'
    r = requests.get(request_url, headers=headers)
    if r.status_code == 200:
        results_dict = json.loads(r._content)
        return results_dict['_id'], results_dict['_etag']
    elif r.status_code == 404:
        return False, False
    else:
        raise Exception('Unexpected http status ({0}) from request: {1}'.format(r.status_code, request_url))


if __name__ == '__main__':
    print config.get('defaults', 'repo_url')

    args = argparser()
    instance_id = HostMetadata().get()
    rpm_packages = YumHandler().get()
    facts = FacterHandler().get()

    results = {
        'instance_id': instance_id,
        'rpm_packages': rpm_packages,
        'facts': facts,
    }

    if args['output'] == 'stdout':
        print json.dumps(results, indent=4)
    elif args['output'] == 'server':
        repo_url = config.get('defaults', 'repo_url')
        doc_id, etag = get_doc_id(repo_url, instance_id)
        if not doc_id:
            post_results(results, repo_url)
        else:
            patch_results(results, repo_url, uuid=doc_id, etag=etag)
